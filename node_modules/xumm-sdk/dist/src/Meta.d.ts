import { XummSdk } from './index';
import type { ApplicationDetails, CreatePayload, AnyJson, CuratedAssetsResponse, PossibleKycStatuses, XrplTransaction, RatesResponse, UserTokenValidity } from './types';
export declare class Meta {
    private apiKey;
    private apiSecret;
    private isBrowser;
    private jwtFlow;
    private jwt?;
    private injected;
    private invoker?;
    endpoint: string;
    constructor(apiKey: string, apiSecret: string);
    setEndpoint(endpoint: string): boolean;
    private authorize;
    call<T>(endpoint: string, httpMethod?: string, data?: CreatePayload | AnyJson): Promise<T>;
    ping(): Promise<ApplicationDetails>;
    getCuratedAssets(): Promise<CuratedAssetsResponse>;
    getRates(currencyCode: string): Promise<RatesResponse>;
    getKycStatus(userTokenOrAccount: string): Promise<keyof PossibleKycStatuses>;
    getTransaction(txHash: string): Promise<XrplTransaction>;
    verifyUserTokens(userTokens: string[]): Promise<UserTokenValidity[]>;
    _inject(Invoker: XummSdk): void;
}
